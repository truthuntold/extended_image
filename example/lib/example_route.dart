// GENERATED CODE - DO NOT MODIFY MANUALLY
// **************************************************************************
// Auto generated by https://github.com/fluttercandies/ff_annotation_route
// **************************************************************************

import 'package:flutter/widgets.dart';

import 'package:flutter_candies_demo_library/flutter_candies_demo_library_route.dart';
import 'pages/custom_image_demo.dart';
import 'pages/image_demo.dart';
import 'pages/image_editor_demo.dart';
import 'pages/loading_progress.dart';
import 'pages/main_page.dart';
import 'pages/paint_image_demo.dart';
import 'pages/photo_view_demo.dart';
import 'pages/waterfall_flow_demo.dart';
import 'pages/zoom_image_demo.dart';

// ignore_for_file: argument_type_not_assignable
RouteResult getRouteResult({String name, Map<String, dynamic> arguments}) {
  switch (name) {
    case 'fluttercandies://WaterfallFlowDemo':
      return RouteResult(
        widget: WaterfallFlowDemo(),
        routeName: 'WaterfallFlow',
        description:
            'show how to build loading more WaterfallFlow with ExtendedImage.',
      );
    case 'fluttercandies://customimage':
      return RouteResult(
        widget: CustomImageDemo(),
        routeName: 'custom image load state',
        description: 'show image with loading,failed,animation state',
      );
    case 'fluttercandies://image':
      return RouteResult(
        widget: ImageDemo(),
        routeName: 'image',
        description:
            'cache image,save to photo Library,image border,shape,borderRadius',
      );
    case 'fluttercandies://imageeditor':
      return RouteResult(
        widget: ImageEditorDemo(),
        routeName: 'image editor',
        description: 'crop,rotate and flip with image editor',
      );
    case 'fluttercandies://loadingprogress':
      return RouteResult(
        widget: LoadingProgress(),
        routeName: 'loading progress',
        description: 'show how to make loading progress for network image',
      );
    case 'fluttercandies://mainpage':
      return RouteResult(
        widget: MainPage(),
        routeName: 'MainPage',
      );
    case 'fluttercandies://paintimage':
      return RouteResult(
        widget: PaintImageDemo(),
        routeName: 'paint image',
        description:
            'show how to paint any thing before/after image is painted',
      );
    case 'fluttercandies://photoview':
      return RouteResult(
        widget: PhotoViewDemo(),
        routeName: 'photo view',
        description: 'show how to zoom/pan image in page view like WeChat',
      );
    case 'fluttercandies://picswiper':
      return RouteResult(
        widget: PicSwiper(
          index: arguments['index'],
          pics: arguments['pics'],
          tuChongItem: arguments['tuChongItem'],
        ),
        showStatusBar: false,
        routeName: 'PicSwiper',
        pageRouteType: PageRouteType.transparent,
      );
    case 'fluttercandies://zoomimage':
      return RouteResult(
        widget: ZoomImageDemo(),
        routeName: 'image zoom',
        description: 'show how to zoom/pan image',
      );
    default:
      return const RouteResult();
  }
}

class RouteResult {
  const RouteResult({
    this.widget,
    this.showStatusBar = true,
    this.routeName = '',
    this.pageRouteType,
    this.description = '',
    this.exts,
  });

  /// The Widget return base on route
  final Widget widget;

  /// Whether show this route with status bar.
  final bool showStatusBar;

  /// The route name to track page
  final String routeName;

  /// The type of page route
  final PageRouteType pageRouteType;

  /// The description of route
  final String description;

  /// The extend arguments
  final Map<String, dynamic> exts;
}

enum PageRouteType {
  material,
  cupertino,
  transparent,
}
